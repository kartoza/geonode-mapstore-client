(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[9367],{81965:(r,e,t)=>{"use strict";t.d(e,{Z:()=>o});var n=t(29346);const o=function(r){(0,n.jx)(r);var e=Number(r[0]),t=Number(r[1]),o=Number(r[2]),i=Number(r[3]);if(6===r.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var a=[e,t],s=[e,i],u=[o,i],h=[o,t];return(0,n.yu)([[a,h,u,s,a]])}},35462:(r,e,t)=>{"use strict";t.d(e,{Z:()=>l});var n=t(97363);function o(r,e,t){var n=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var o=0,i=e.length-1;o<e.length;i=o++){var a=e[o][0],s=e[o][1],u=e[i][0],h=e[i][1];if(r[1]*(a-u)+s*(u-r[0])+h*(r[0]-a)==0&&(a-r[0])*(u-r[0])<=0&&(s-r[1])*(h-r[1])<=0)return!t;s>r[1]!=h>r[1]&&r[0]<(u-a)*(r[1]-s)/(h-s)+a&&(n=!n)}return n}const i=function(r,e,t){if("object"!=typeof(t=t||{}))throw new Error("options is invalid");var i=t.ignoreBoundary;if(!r)throw new Error("point is required");if(!e)throw new Error("polygon is required");var a=(0,n.c9)(r),s=(0,n.r7)(e),u=e.geometry?e.geometry.type:e.type,h=e.bbox;if(h&&!1===function(r,e){return e[0]<=r[0]&&e[1]<=r[1]&&e[2]>=r[0]&&e[3]>=r[1]}(a,h))return!1;"Polygon"===u&&(s=[s]);for(var c=0,l=!1;c<s.length&&!l;c++)if(o(a,s[c][0],i)){for(var f=!1,d=1;d<s[c].length&&!f;)o(a,s[c][d],!i)&&(f=!0),d++;f||(l=!0)}return l};var a=t(39153);const s=function(r){var e=[1/0,1/0,-1/0,-1/0];return(0,a.pZ)(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e};var u=t(31662);function h(r,e){return!(r[0]>e[0]||r[2]<e[2]||r[1]>e[1]||r[3]<e[3])}function c(r,e){return r[0]===e[0]&&r[1]===e[1]}const l=function(r,e){var t=(0,n.oL)(r),o=(0,n.oL)(e),a=(0,n.wA)(r),l=(0,n.wA)(e),f=(0,n.r7)(r),d=(0,n.r7)(e);switch(t){case"Point":switch(o){case"Point":return c(f,d);default:throw new Error("feature2 "+o+" geometry not supported")}case"MultiPoint":switch(o){case"Point":return function(r,e){var t,n=!1;for(t=0;t<r.coordinates.length;t++)if(c(r.coordinates[t],e.coordinates)){n=!0;break}return n}(a,l);case"MultiPoint":return function(r,e){for(var t=0;t<e.coordinates.length;t++){for(var n=!1,o=0;o<r.coordinates.length;o++)if(c(e.coordinates[t],r.coordinates[o])){n=!0;break}if(!n)return!1}return!0}(a,l);default:throw new Error("feature2 "+o+" geometry not supported")}case"LineString":switch(o){case"Point":return(0,u.Z)(l,a,{ignoreEndVertices:!0});case"LineString":return function(r,e){for(var t=!1,n=0;n<e.coordinates.length;n++)if((0,u.Z)({type:"Point",coordinates:e.coordinates[n]},r,{ignoreEndVertices:!0})&&(t=!0),!(0,u.Z)({type:"Point",coordinates:e.coordinates[n]},r,{ignoreEndVertices:!1}))return!1;return t}(a,l);case"MultiPoint":return function(r,e){for(var t=!1,n=0;n<e.coordinates.length;n++)if((0,u.Z)(e.coordinates[n],r,{ignoreEndVertices:!0})&&(t=!0),!(0,u.Z)(e.coordinates[n],r))return!1;return!!t}(a,l);default:throw new Error("feature2 "+o+" geometry not supported")}case"Polygon":switch(o){case"Point":return i(l,a,{ignoreBoundary:!0});case"LineString":return function(r,e){var t,n,o=!1,a=0;if(!h(s(r),s(e)))return!1;for(;a<e.coordinates.length-1;a++){var u=(t=e.coordinates[a],n=e.coordinates[a+1],[(t[0]+n[0])/2,(t[1]+n[1])/2]);if(i({type:"Point",coordinates:u},r,{ignoreBoundary:!0})){o=!0;break}}return o}(a,l);case"Polygon":return function(r,e){if(!h(s(r),s(e)))return!1;for(var t=0;t<e.coordinates[0].length;t++)if(!i(e.coordinates[0][t],r))return!1;return!0}(a,l);case"MultiPoint":return function(r,e){for(var t=0;t<e.coordinates.length;t++)if(!i(e.coordinates[t],r,{ignoreBoundary:!0}))return!1;return!0}(a,l);default:throw new Error("feature2 "+o+" geometry not supported")}default:throw new Error("feature1 "+t+" geometry not supported")}}},89733:(r,e,t)=>{"use strict";t.d(e,{Z:()=>Z});var n=t(39153),o=t(97363);function i(r,e,t,n,o){for(;n>t;){if(n-t>600){var s=n-t+1,u=e-t+1,h=Math.log(s),c=.5*Math.exp(2*h/3),l=.5*Math.sqrt(h*c*(s-c)/s)*(u-s/2<0?-1:1);i(r,e,Math.max(t,Math.floor(e-u*c/s+l)),Math.min(n,Math.floor(e+(s-u)*c/s+l)),o)}var f=r[e],d=t,m=n;for(a(r,t,e),o(r[n],f)>0&&a(r,t,n);d<m;){for(a(r,d,m),d++,m--;o(r[d],f)<0;)d++;for(;o(r[m],f)>0;)m--}0===o(r[t],f)?a(r,t,m):a(r,++m,n),m<=e&&(t=m+1),e<=m&&(n=m-1)}}function a(r,e,t){var n=r[e];r[e]=r[t],r[t]=n}function s(r,e){return r<e?-1:r>e?1:0}const u=function(r,e,t,n,o){i(r,e,t||0,n||r.length-1,o||s)};function h(r,e){if(!(this instanceof h))return new h(r,e);this._maxEntries=Math.max(4,r||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function c(r,e,t){if(!t)return e.indexOf(r);for(var n=0;n<e.length;n++)if(t(r,e[n]))return n;return-1}function l(r,e){f(r,0,r.children.length,e,r)}function f(r,e,t,n,o){o||(o=b(null)),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i,a=e;a<t;a++)i=r.children[a],d(o,r.leaf?n(i):i);return o}function d(r,e){return r.minX=Math.min(r.minX,e.minX),r.minY=Math.min(r.minY,e.minY),r.maxX=Math.max(r.maxX,e.maxX),r.maxY=Math.max(r.maxY,e.maxY),r}function m(r,e){return r.minX-e.minX}function p(r,e){return r.minY-e.minY}function g(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function y(r){return r.maxX-r.minX+(r.maxY-r.minY)}function w(r,e){return r.minX<=e.minX&&r.minY<=e.minY&&e.maxX<=r.maxX&&e.maxY<=r.maxY}function v(r,e){return e.minX<=r.maxX&&e.minY<=r.maxY&&e.maxX>=r.minX&&e.maxY>=r.minY}function b(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function E(r,e,t,n,o){for(var i,a=[e,t];a.length;)(t=a.pop())-(e=a.pop())<=n||(i=e+Math.ceil((t-e)/n/2)*n,u(r,i,e,t,o),a.push(e,i,i,t))}h.prototype={all:function(){return this._all(this.data,[])},search:function(r){var e=this.data,t=[],n=this.toBBox;if(!v(r,e))return t;for(var o,i,a,s,u=[];e;){for(o=0,i=e.children.length;o<i;o++)a=e.children[o],v(r,s=e.leaf?n(a):a)&&(e.leaf?t.push(a):w(r,s)?this._all(a,t):u.push(a));e=u.pop()}return t},collides:function(r){var e=this.data,t=this.toBBox;if(!v(r,e))return!1;for(var n,o,i,a,s=[];e;){for(n=0,o=e.children.length;n<o;n++)if(i=e.children[n],v(r,a=e.leaf?t(i):i)){if(e.leaf||w(r,a))return!0;s.push(i)}e=s.pop()}return!1},load:function(r){if(!r||!r.length)return this;if(r.length<this._minEntries){for(var e=0,t=r.length;e<t;e++)this.insert(r[e]);return this}var n=this._build(r.slice(),0,r.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var o=this.data;this.data=n,n=o}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(r){return r&&this._insert(r,this.data.height-1),this},clear:function(){return this.data=b([]),this},remove:function(r,e){if(!r)return this;for(var t,n,o,i,a=this.data,s=this.toBBox(r),u=[],h=[];a||u.length;){if(a||(a=u.pop(),n=u[u.length-1],t=h.pop(),i=!0),a.leaf&&-1!==(o=c(r,a.children,e)))return a.children.splice(o,1),u.push(a),this._condense(u),this;i||a.leaf||!w(a,s)?n?(t++,a=n.children[t],i=!1):a=null:(u.push(a),h.push(t),t=0,n=a,a=a.children[0])}return this},toBBox:function(r){return r},compareMinX:m,compareMinY:p,toJSON:function(){return this.data},fromJSON:function(r){return this.data=r,this},_all:function(r,e){for(var t=[];r;)r.leaf?e.push.apply(e,r.children):t.push.apply(t,r.children),r=t.pop();return e},_build:function(r,e,t,n){var o,i=t-e+1,a=this._maxEntries;if(i<=a)return l(o=b(r.slice(e,t+1)),this.toBBox),o;n||(n=Math.ceil(Math.log(i)/Math.log(a)),a=Math.ceil(i/Math.pow(a,n-1))),(o=b([])).leaf=!1,o.height=n;var s,u,h,c,f=Math.ceil(i/a),d=f*Math.ceil(Math.sqrt(a));for(E(r,e,t,d,this.compareMinX),s=e;s<=t;s+=d)for(E(r,s,h=Math.min(s+d-1,t),f,this.compareMinY),u=s;u<=h;u+=f)c=Math.min(u+f-1,h),o.children.push(this._build(r,u,c,n-1));return l(o,this.toBBox),o},_chooseSubtree:function(r,e,t,n){for(var o,i,a,s,u,h,c,l,f,d;n.push(e),!e.leaf&&n.length-1!==t;){for(c=l=1/0,o=0,i=e.children.length;o<i;o++)u=g(a=e.children[o]),f=r,d=a,(h=(Math.max(d.maxX,f.maxX)-Math.min(d.minX,f.minX))*(Math.max(d.maxY,f.maxY)-Math.min(d.minY,f.minY))-u)<l?(l=h,c=u<c?u:c,s=a):h===l&&u<c&&(c=u,s=a);e=s||e.children[0]}return e},_insert:function(r,e,t){var n=this.toBBox,o=t?r:n(r),i=[],a=this._chooseSubtree(o,this.data,e,i);for(a.children.push(r),d(a,o);e>=0&&i[e].children.length>this._maxEntries;)this._split(i,e),e--;this._adjustParentBBoxes(o,i,e)},_split:function(r,e){var t=r[e],n=t.children.length,o=this._minEntries;this._chooseSplitAxis(t,o,n);var i=this._chooseSplitIndex(t,o,n),a=b(t.children.splice(i,t.children.length-i));a.height=t.height,a.leaf=t.leaf,l(t,this.toBBox),l(a,this.toBBox),e?r[e-1].children.push(a):this._splitRoot(t,a)},_splitRoot:function(r,e){this.data=b([r,e]),this.data.height=r.height+1,this.data.leaf=!1,l(this.data,this.toBBox)},_chooseSplitIndex:function(r,e,t){var n,o,i,a,s,u,h,c,l,d,m,p,y,w;for(u=h=1/0,n=e;n<=t-e;n++)l=o=f(r,0,n,this.toBBox),d=i=f(r,n,t,this.toBBox),void 0,void 0,void 0,void 0,m=Math.max(l.minX,d.minX),p=Math.max(l.minY,d.minY),y=Math.min(l.maxX,d.maxX),w=Math.min(l.maxY,d.maxY),a=Math.max(0,y-m)*Math.max(0,w-p),s=g(o)+g(i),a<u?(u=a,c=n,h=s<h?s:h):a===u&&s<h&&(h=s,c=n);return c},_chooseSplitAxis:function(r,e,t){var n=r.leaf?this.compareMinX:m,o=r.leaf?this.compareMinY:p;this._allDistMargin(r,e,t,n)<this._allDistMargin(r,e,t,o)&&r.children.sort(n)},_allDistMargin:function(r,e,t,n){r.children.sort(n);var o,i,a=this.toBBox,s=f(r,0,e,a),u=f(r,t-e,t,a),h=y(s)+y(u);for(o=e;o<t-e;o++)i=r.children[o],d(s,r.leaf?a(i):i),h+=y(s);for(o=t-e-1;o>=e;o--)i=r.children[o],d(u,r.leaf?a(i):i),h+=y(u);return h},_adjustParentBBoxes:function(r,e,t){for(var n=t;n>=0;n--)d(e[n],r)},_condense:function(r){for(var e,t=r.length-1;t>=0;t--)0===r[t].children.length?t>0?(e=r[t-1].children).splice(e.indexOf(r[t]),1):this.clear():l(r[t],this.toBBox)},_initFormat:function(r){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(r[0])),this.compareMinY=new Function("a","b",e.join(r[1])),this.toBBox=new Function("a","return {minX: a"+r[0]+", minY: a"+r[1]+", maxX: a"+r[2]+", maxY: a"+r[3]+"};")}};const x=h;function M(r){var e=[r[0],r[1]],t=[r[0],r[3]],n=[r[2],r[3]];return{type:"Feature",bbox:r,properties:{},geometry:{type:"Polygon",coordinates:[[e,[r[2],r[1]],n,t,e]]}}}function P(r){var e=[1/0,1/0,-1/0,-1/0];return(0,n.pZ)(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e}const A=function(r){var e=x(r);return e.insert=function(r){if(Array.isArray(r)){var e=r;(r=M(e)).bbox=e}else r.bbox=r.bbox?r.bbox:P(r);return x.prototype.insert.call(this,r)},e.load=function(r){var e=[];return Array.isArray(r)?r.forEach((function(r){var t=M(r);t.bbox=r,e.push(t)})):(0,n.By)(r,(function(r){r.bbox=r.bbox?r.bbox:P(r),e.push(r)})),x.prototype.load.call(this,e)},e.remove=function(r){if(Array.isArray(r)){var e=r;(r=M(e)).bbox=e}return x.prototype.remove.call(this,r)},e.clear=function(){return x.prototype.clear.call(this)},e.search=function(r){return{type:"FeatureCollection",features:x.prototype.search.call(this,this.toBBox(r))}},e.collides=function(r){return x.prototype.collides.call(this,this.toBBox(r))},e.all=function(){return{type:"FeatureCollection",features:x.prototype.all.call(this)}},e.toJSON=function(){return x.prototype.toJSON.call(this)},e.fromJSON=function(r){return x.prototype.fromJSON.call(this,r)},e.toBBox=function(r){var e;return{minX:(e=r.bbox?r.bbox:Array.isArray(r)&&4===r.length?r:P(r))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e};var S=t(29346);const F=function(r){if(!r)throw new Error("geojson is required");var e=[];return(0,n.nG)(r,(function(r){!function(r,e){var t=[],n=r.geometry;switch(n.type){case"Polygon":t=(0,o.r7)(n);break;case"LineString":t=[(0,o.r7)(n)]}t.forEach((function(t){(function(r,e){var t=[];return r.reduce((function(r,n){var o,i,a,s,u,h,c=(0,S.Tu)([r,n],e);return c.bbox=(i=n,a=(o=r)[0],s=o[1],[a<(u=i[0])?a:u,s<(h=i[1])?s:h,a>u?a:u,s>h?s:h]),t.push(c),n})),t})(t,r.properties).forEach((function(r){r.id=e.length,e.push(r)}))}))}(r,e)})),(0,S.uf)(e)};const B=function r(e,t,n){if(n=n||{},!(0,S.Kn)(n))throw new Error("options is invalid");if(!0===n.final)return function(e,t){var n=r(t,e);return(n+180)%360}(e,t);var i=(0,o.c9)(e),a=(0,o.c9)(t),s=(0,S.Ht)(i[0]),u=(0,S.Ht)(a[0]),h=(0,S.Ht)(i[1]),c=(0,S.Ht)(a[1]),l=Math.sin(u-s)*Math.cos(c),f=Math.cos(h)*Math.sin(c)-Math.sin(h)*Math.cos(c)*Math.cos(u-s);return(0,S.vi)(Math.atan2(l,f))},C=function(r,e,t){if(t=t||{},!(0,S.Kn)(t))throw new Error("options is invalid");var n=t.units,i=(0,o.c9)(r),a=(0,o.c9)(e),s=(0,S.Ht)(a[1]-i[1]),u=(0,S.Ht)(a[0]-i[0]),h=(0,S.Ht)(i[1]),c=(0,S.Ht)(a[1]),l=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(u/2),2)*Math.cos(h)*Math.cos(c);return(0,S.DL)(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)),n)},q=function(r,e,t,n){if(n=n||{},!(0,S.Kn)(n))throw new Error("options is invalid");var i=n.units,a=n.properties,s=(0,o.c9)(r),u=(0,S.Ht)(s[0]),h=(0,S.Ht)(s[1]),c=(0,S.Ht)(t),l=(0,S.lF)(e,i),f=Math.asin(Math.sin(h)*Math.cos(l)+Math.cos(h)*Math.sin(l)*Math.cos(c)),d=u+Math.atan2(Math.sin(c)*Math.sin(l)*Math.cos(h),Math.cos(l)-Math.sin(h)*Math.sin(f)),m=(0,S.vi)(d),p=(0,S.vi)(f);return(0,S.xm)([m,p],a)};function L(r,e){var t=(0,o.r7)(r),n=(0,o.r7)(e);if(2!==t.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=t[0][0],a=t[0][1],s=t[1][0],u=t[1][1],h=n[0][0],c=n[0][1],l=n[1][0],f=n[1][1],d=(f-c)*(s-i)-(l-h)*(u-a);if(0===d)return null;var m=((l-h)*(a-c)-(f-c)*(i-h))/d,p=((s-i)*(a-c)-(u-a)*(i-h))/d;if(m>=0&&m<=1&&p>=0&&p<=1){var g=i+m*(s-i),y=a+m*(u-a);return(0,S.xm)([g,y])}return null}const _=function(r,e){var t={},i=[];if("LineString"===r.type&&(r=(0,S.zL)(r)),"LineString"===e.type&&(e=(0,S.zL)(e)),"Feature"===r.type&&"Feature"===e.type&&"LineString"===r.geometry.type&&"LineString"===e.geometry.type&&2===r.geometry.coordinates.length&&2===e.geometry.coordinates.length){var a=L(r,e);return a&&i.push(a),(0,S.uf)(i)}var s=A();return s.load(F(e)),(0,n.By)(F(r),(function(r){(0,n.By)(s.search(r),(function(e){var n=L(r,e);if(n){var a=(0,o.r7)(n).join(",");t[a]||(t[a]=!0,i.push(n))}}))})),(0,S.uf)(i)},k=function(r,e,t){if(t=t||{},!(0,S.Kn)(t))throw new Error("options is invalid");var i=r.geometry?r.geometry.type:r.type;if("LineString"!==i&&"MultiLineString"!==i)throw new Error("lines must be LineString or MultiLineString");var a=(0,S.xm)([1/0,1/0],{dist:1/0}),s=0;return(0,n.nG)(r,(function(r){for(var n=(0,o.r7)(r),i=0;i<n.length-1;i++){var u=(0,S.xm)(n[i]);u.properties.dist=C(e,u,t);var h=(0,S.xm)(n[i+1]);h.properties.dist=C(e,h,t);var c=C(u,h,t),l=Math.max(u.properties.dist,h.properties.dist),f=B(u,h),d=q(e,l,f+90,t),m=q(e,l,f-90,t),p=_((0,S.Tu)([d.geometry.coordinates,m.geometry.coordinates]),(0,S.Tu)([u.geometry.coordinates,h.geometry.coordinates])),g=null;p.features.length>0&&((g=p.features[0]).properties.dist=C(e,g,t),g.properties.location=s+C(u,g,t)),u.properties.dist<a.properties.dist&&((a=u).properties.index=i,a.properties.location=s),h.properties.dist<a.properties.dist&&((a=h).properties.index=i+1,a.properties.location=s+c),g&&g.properties.dist<a.properties.dist&&((a=g).properties.index=i),s+=c}})),a};var N=t(31662),X=Array.prototype.slice;function Y(r){return"[object Arguments]"===Object.prototype.toString.call(r)}function j(r,e,t){return t||(t={}),r===e||(r instanceof Date&&e instanceof Date?r.getTime()===e.getTime():!r||!e||"object"!=typeof r&&"object"!=typeof e?(t.strict,r===e):function(r,e,t){var n,o;if(O(r)||O(e))return!1;if(r.prototype!==e.prototype)return!1;if(Y(r))return!!Y(e)&&j(r=X.call(r),e=X.call(e),t);if(R(r)){if(!R(e))return!1;if(r.length!==e.length)return!1;for(n=0;n<r.length;n++)if(r[n]!==e[n])return!1;return!0}try{var i=Object.keys(r),a=Object.keys(e)}catch(r){return!1}if(i.length!==a.length)return!1;for(i.sort(),a.sort(),n=i.length-1;n>=0;n--)if(i[n]!==a[n])return!1;for(n=i.length-1;n>=0;n--)if(!j(r[o=i[n]],e[o],t))return!1;return typeof r==typeof e}(r,e,t))}function O(r){return null==r}function R(r){return!(!r||"object"!=typeof r||"number"!=typeof r.length||"function"!=typeof r.copy||"function"!=typeof r.slice||r.length>0&&"number"!=typeof r[0])}function I(r,e){var t=(0,o.r7)(e),n=(0,o.r7)(r),i=n[0],a=n[n.length-1],s=r.geometry.coordinates;return j(t[0],i)?s.unshift(t[1]):j(t[0],a)?s.push(t[1]):j(t[1],i)?s.unshift(t[0]):j(t[1],a)&&s.push(t[0]),r}function T(r,e){var t=(0,o.r7)(r),n=(0,o.r7)(e);if(2!==t.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=t[0][0],a=t[0][1],s=t[1][0],u=t[1][1],h=n[0][0],c=n[0][1],l=n[1][0],f=n[1][1],d=(f-c)*(s-i)-(l-h)*(u-a);if(0===d)return null;var m=((l-h)*(a-c)-(f-c)*(i-h))/d,p=((s-i)*(a-c)-(u-a)*(i-h))/d;if(m>=0&&m<=1&&p>=0&&p<=1){var g=i+m*(s-i),y=a+m*(u-a);return(0,S.xm)([g,y])}return null}var G=t(29657),D=t.n(G);const Z=function(r,e){if(!r)throw new Error("feature1 is required");if(!e)throw new Error("feature2 is required");var t=(0,o.oL)(r);if(t!==(0,o.oL)(e))throw new Error("features must be of the same type");if("Point"===t)throw new Error("Point geometry not supported");if(new(D())({precision:6}).compare(r,e))return!1;var i=0;switch(t){case"MultiPoint":var a=(0,n.UU)(r),s=(0,n.UU)(e);a.forEach((function(r){s.forEach((function(e){r[0]===e[0]&&r[1]===e[1]&&i++}))}));break;case"LineString":case"MultiLineString":(0,n.Vf)(r,(function(r){(0,n.Vf)(e,(function(e){(function(r,e,t){if(t=t||{},!(0,S.Kn)(t))throw new Error("options is invalid");var i,a=t.tolerance||0,s=[],u=A();return u.load(F(r)),(0,n.Vf)(e,(function(r){var e=!1;(0,n.By)(u.search(r),(function(t){if(!1===e){var n=(0,o.r7)(r).sort(),s=(0,o.r7)(t).sort();j(n,s)||(0===a?(0,N.Z)(n[0],t)&&(0,N.Z)(n[1],t):k(t,n[0]).properties.dist<=a&&k(t,n[1]).properties.dist<=a)?(e=!0,i=i?I(i,r):r):(0===a?(0,N.Z)(s[0],r)&&(0,N.Z)(s[1],r):k(r,s[0]).properties.dist<=a&&k(r,s[1]).properties.dist<=a)&&(i=i?I(i,t):t)}})),!1===e&&i&&(s.push(i),i=void 0)})),i&&s.push(i),(0,S.uf)(s)})(r,e).features.length&&i++}))}));break;case"Polygon":case"MultiPolygon":(0,n.Vf)(r,(function(r){(0,n.Vf)(e,(function(e){(function(r,e){var t={},i=[];if("LineString"===r.type&&(r=(0,S.zL)(r)),"LineString"===e.type&&(e=(0,S.zL)(e)),"Feature"===r.type&&"Feature"===e.type&&"LineString"===r.geometry.type&&"LineString"===e.geometry.type&&2===r.geometry.coordinates.length&&2===e.geometry.coordinates.length){var a=T(r,e);return a&&i.push(a),(0,S.uf)(i)}var s=A();return s.load(F(e)),(0,n.By)(F(r),(function(r){(0,n.By)(s.search(r),(function(e){var n=T(r,e);if(n){var a=(0,o.r7)(n).join(",");t[a]||(t[a]=!0,i.push(n))}}))})),(0,S.uf)(i)})(r,e).features.length&&i++}))}))}return i>0}},31662:(r,e,t)=>{"use strict";t.d(e,{Z:()=>a});var n=t(97363),o=t(29346);function i(r,e,t,n){var o=t[0],i=t[1],a=r[0],s=r[1],u=e[0],h=e[1],c=u-a,l=h-s;return 0==(t[0]-a)*l-(t[1]-s)*c&&(n?"start"===n?Math.abs(c)>=Math.abs(l)?c>0?a<o&&o<=u:u<=o&&o<a:l>0?s<i&&i<=h:h<=i&&i<s:"end"===n?Math.abs(c)>=Math.abs(l)?c>0?a<=o&&o<u:u<o&&o<=a:l>0?s<=i&&i<h:h<i&&i<=s:"both"===n?Math.abs(c)>=Math.abs(l)?c>0?a<o&&o<u:u<o&&o<a:l>0?s<i&&i<h:h<i&&i<s:void 0:Math.abs(c)>=Math.abs(l)?c>0?a<=o&&o<=u:u<=o&&o<=a:l>0?s<=i&&i<=h:h<=i&&i<=s)}const a=function(r,e,t){var a=(t=t||{}).ignoreEndVertices;if(!(0,o.Kn)(t))throw new Error("invalid options");if(!r)throw new Error("pt is required");if(!e)throw new Error("line is required");for(var s=(0,n.c9)(r),u=(0,n.r7)(e),h=0;h<u.length-1;h++){var c=!1;if(a&&(0===h&&(c="start"),h===u.length-2&&(c="end"),0===h&&h+1===u.length-1&&(c="both")),i(u[h],u[h+1],s,c))return!0}return!1}},68898:(r,e,t)=>{"use strict";var n=t(87554),o=t(41737);e.Z=function(r,e,t){void 0===t&&(t={});for(var i=t.steps||64,a=t.properties?t.properties:!Array.isArray(r)&&"Feature"===r.type&&r.properties?r.properties:{},s=[],u=0;u<i;u++)s.push(n.default(r,e,-360*u/i,t).geometry.coordinates);return s.push(s[0]),o.polygon([s],a)}},87554:(r,e,t)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=t(41737),o=t(79131);e.default=function(r,e,t,i){void 0===i&&(i={});var a=o.getCoord(r),s=n.degreesToRadians(a[0]),u=n.degreesToRadians(a[1]),h=n.degreesToRadians(t),c=n.lengthToRadians(e,i.units),l=Math.asin(Math.sin(u)*Math.cos(c)+Math.cos(u)*Math.sin(c)*Math.cos(h)),f=s+Math.atan2(Math.sin(h)*Math.sin(c)*Math.cos(u),Math.cos(c)-Math.sin(u)*Math.sin(l)),d=n.radiansToDegrees(f),m=n.radiansToDegrees(l);return n.point([d,m],i.properties)}},41737:(r,e)=>{"use strict";function t(r,e,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=e||{},n.geometry=r,n}function n(r,e,n){if(void 0===n&&(n={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(r[0])||!d(r[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:r},e,n)}function o(r,e,n){void 0===n&&(n={});for(var o=0,i=r;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++)if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:r},e,n)}function i(r,e,n){if(void 0===n&&(n={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:r},e,n)}function a(r,e){void 0===e&&(e={});var t={type:"FeatureCollection"};return e.id&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.features=r,t}function s(r,e,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:r},e,n)}function u(r,e,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:r},e,n)}function h(r,e,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:r},e,n)}function c(r,t){void 0===t&&(t="kilometers");var n=e.factors[t];if(!n)throw new Error(t+" units is invalid");return r*n}function l(r,t){void 0===t&&(t="kilometers");var n=e.factors[t];if(!n)throw new Error(t+" units is invalid");return r/n}function f(r){return r%(2*Math.PI)*180/Math.PI}function d(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}Object.defineProperty(e,"__esModule",{value:!0}),e.earthRadius=6371008.8,e.factors={centimeters:100*e.earthRadius,centimetres:100*e.earthRadius,degrees:e.earthRadius/111325,feet:3.28084*e.earthRadius,inches:39.37*e.earthRadius,kilometers:e.earthRadius/1e3,kilometres:e.earthRadius/1e3,meters:e.earthRadius,metres:e.earthRadius,miles:e.earthRadius/1609.344,millimeters:1e3*e.earthRadius,millimetres:1e3*e.earthRadius,nauticalmiles:e.earthRadius/1852,radians:1,yards:e.earthRadius/1.0936},e.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/e.earthRadius,yards:1/1.0936},e.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},e.feature=t,e.geometry=function(r,e,t){switch(void 0===t&&(t={}),r){case"Point":return n(e).geometry;case"LineString":return i(e).geometry;case"Polygon":return o(e).geometry;case"MultiPoint":return u(e).geometry;case"MultiLineString":return s(e).geometry;case"MultiPolygon":return h(e).geometry;default:throw new Error(r+" is invalid")}},e.point=n,e.points=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return n(r,e)})),t)},e.polygon=o,e.polygons=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return o(r,e)})),t)},e.lineString=i,e.lineStrings=function(r,e,t){return void 0===t&&(t={}),a(r.map((function(r){return i(r,e)})),t)},e.featureCollection=a,e.multiLineString=s,e.multiPoint=u,e.multiPolygon=h,e.geometryCollection=function(r,e,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:r},e,n)},e.round=function(r,e){if(void 0===e&&(e=0),e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},e.radiansToLength=c,e.lengthToRadians=l,e.lengthToDegrees=function(r,e){return f(l(r,e))},e.bearingToAzimuth=function(r){var e=r%360;return e<0&&(e+=360),e},e.radiansToDegrees=f,e.degreesToRadians=function(r){return r%360*Math.PI/180},e.convertLength=function(r,e,t){if(void 0===e&&(e="kilometers"),void 0===t&&(t="kilometers"),!(r>=0))throw new Error("length must be a positive number");return c(l(r,e),t)},e.convertArea=function(r,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(r>=0))throw new Error("area must be a positive number");var o=e.areaFactors[t];if(!o)throw new Error("invalid original units");var i=e.areaFactors[n];if(!i)throw new Error("invalid final units");return r/o*i},e.isNumber=d,e.isObject=function(r){return!!r&&r.constructor===Object},e.validateBBox=function(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach((function(r){if(!d(r))throw new Error("bbox must only contain numbers")}))},e.validateId=function(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}},79131:(r,e,t)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=t(41737);e.getCoord=function(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if("Feature"===r.type&&null!==r.geometry&&"Point"===r.geometry.type)return r.geometry.coordinates;if("Point"===r.type)return r.coordinates}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")},e.getCoords=function(r){if(Array.isArray(r))return r;if("Feature"===r.type){if(null!==r.geometry)return r.geometry.coordinates}else if(r.coordinates)return r.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},e.containsNumber=function r(e){if(e.length>1&&n.isNumber(e[0])&&n.isNumber(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return r(e[0]);throw new Error("coordinates must only contain numbers")},e.geojsonType=function(r,e,t){if(!e||!t)throw new Error("type and name required");if(!r||r.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.type)},e.featureOf=function(r,e,t){if(!r)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!r||"Feature"!==r.type||!r.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!r.geometry||r.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.geometry.type)},e.collectionOf=function(r,e,t){if(!r)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!r||"FeatureCollection"!==r.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0,o=r.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!i.geometry||i.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+i.geometry.type)}},e.getGeom=function(r){return"Feature"===r.type?r.geometry:r},e.getType=function(r,e){return"FeatureCollection"===r.type?"FeatureCollection":"GeometryCollection"===r.type?"GeometryCollection":"Feature"===r.type&&null!==r.geometry?r.geometry.type:r.type}},7725:(r,e,t)=>{"use strict";t.d(e,{Z:()=>c});var n=t(97363),o=Math.PI/180,i=180/Math.PI,a=function(r,e){this.lon=r,this.lat=e,this.x=o*r,this.y=o*e};a.prototype.view=function(){return String(this.lon).slice(0,4)+","+String(this.lat).slice(0,4)},a.prototype.antipode=function(){var r=-1*this.lat,e=this.lon<0?180+this.lon:-1*(180-this.lon);return new a(e,r)};var s=function(){this.coords=[],this.length=0};s.prototype.move_to=function(r){this.length++,this.coords.push(r)};var u=function(r){this.properties=r||{},this.geometries=[]};u.prototype.json=function(){if(this.geometries.length<=0)return{geometry:{type:"LineString",coordinates:null},type:"Feature",properties:this.properties};if(1===this.geometries.length)return{geometry:{type:"LineString",coordinates:this.geometries[0].coords},type:"Feature",properties:this.properties};for(var r=[],e=0;e<this.geometries.length;e++)r.push(this.geometries[e].coords);return{geometry:{type:"MultiLineString",coordinates:r},type:"Feature",properties:this.properties}},u.prototype.wkt=function(){for(var r="",e="LINESTRING(",t=function(r){e+=r[0]+" "+r[1]+","},n=0;n<this.geometries.length;n++){if(0===this.geometries[n].coords.length)return"LINESTRING(empty)";this.geometries[n].coords.forEach(t),r+=e.substring(0,e.length-1)+")"}return r};var h=function(r,e,t){if(!r||void 0===r.x||void 0===r.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");if(!e||void 0===e.x||void 0===e.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");this.start=new a(r.x,r.y),this.end=new a(e.x,e.y),this.properties=t||{};var n=this.start.x-this.end.x,o=this.start.y-this.end.y,i=Math.pow(Math.sin(o/2),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(n/2),2);if(this.g=2*Math.asin(Math.sqrt(i)),this.g===Math.PI)throw new Error("it appears "+r.view()+" and "+e.view()+" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite");if(isNaN(this.g))throw new Error("could not calculate great circle between "+r+" and "+e)};h.prototype.interpolate=function(r){var e=Math.sin((1-r)*this.g)/Math.sin(this.g),t=Math.sin(r*this.g)/Math.sin(this.g),n=e*Math.cos(this.start.y)*Math.cos(this.start.x)+t*Math.cos(this.end.y)*Math.cos(this.end.x),o=e*Math.cos(this.start.y)*Math.sin(this.start.x)+t*Math.cos(this.end.y)*Math.sin(this.end.x),a=e*Math.sin(this.start.y)+t*Math.sin(this.end.y),s=i*Math.atan2(a,Math.sqrt(Math.pow(n,2)+Math.pow(o,2)));return[i*Math.atan2(o,n),s]},h.prototype.Arc=function(r,e){var t=[];if(!r||r<=2)t.push([this.start.lon,this.start.lat]),t.push([this.end.lon,this.end.lat]);else for(var n=1/(r-1),o=0;o<r;++o){var i=n*o,a=this.interpolate(i);t.push(a)}for(var h=!1,c=0,l=e&&e.offset?e.offset:10,f=180-l,d=-180+l,m=360-l,p=1;p<t.length;++p){var g=t[p-1][0],y=t[p][0],w=Math.abs(y-g);w>m&&(y>f&&g<d||g>f&&y<d)?h=!0:w>c&&(c=w)}var v=[];if(h&&c<l){var b=[];v.push(b);for(var E=0;E<t.length;++E){var x=parseFloat(t[E][0]);if(E>0&&Math.abs(x-t[E-1][0])>m){var M=parseFloat(t[E-1][0]),P=parseFloat(t[E-1][1]),A=parseFloat(t[E][0]),S=parseFloat(t[E][1]);if(M>-180&&M<d&&180===A&&E+1<t.length&&t[E-1][0]>-180&&t[E-1][0]<d){b.push([-180,t[E][1]]),E++,b.push([t[E][0],t[E][1]]);continue}if(M>f&&M<180&&-180===A&&E+1<t.length&&t[E-1][0]>f&&t[E-1][0]<180){b.push([180,t[E][1]]),E++,b.push([t[E][0],t[E][1]]);continue}if(M<d&&A>f){var F=M;M=A,A=F;var B=P;P=S,S=B}if(M>f&&A<d&&(A+=360),M<=180&&A>=180&&M<A){var C=(180-M)/(A-M),q=C*S+(1-C)*P;b.push([t[E-1][0]>f?180:-180,q]),(b=[]).push([t[E-1][0]>f?-180:180,q]),v.push(b)}else b=[],v.push(b);b.push([x,t[E][1]])}else b.push([t[E][0],t[E][1]])}}else{var L=[];v.push(L);for(var _=0;_<t.length;++_)L.push([t[_][0],t[_][1]])}for(var k=new u(this.properties),N=0;N<v.length;++N){var X=new s;k.geometries.push(X);for(var Y=v[N],j=0;j<Y.length;++j)X.move_to(Y[j])}return k};const c=function(r,e,t){if("object"!=typeof(t=t||{}))throw new Error("options is invalid");var o=t.properties,i=t.npoints,a=t.offset;return r=(0,n.c9)(r),e=(0,n.c9)(e),o=o||{},i=i||100,a=a||10,new h({x:r[0],y:r[1]},{x:e[0],y:e[1]},o).Arc(i,{offset:a}).json()}},29346:(r,e,t)=>{"use strict";t.d(e,{zL:()=>i,xm:()=>a,yu:()=>s,Tu:()=>u,uf:()=>h,DL:()=>c,lF:()=>l,vi:()=>f,Ht:()=>d,hj:()=>m,Kn:()=>p,jx:()=>g});var n=6371008.8,o={meters:n,metres:n,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:n/1852,inches:39.37*n,yards:5825721.287490856,feet:20902260.511392,radians:1,degrees:57.22891354143274};function i(r,e,t){if(!p(t=t||{}))throw new Error("options is invalid");var n=t.bbox,o=t.id;if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");n&&g(n),o&&y(o);var i={type:"Feature"};return o&&(i.id=o),n&&(i.bbox=n),i.properties=e||{},i.geometry=r,i}function a(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!m(r[0])||!m(r[1]))throw new Error("coordinates must contain numbers");return i({type:"Point",coordinates:r},e,t)}function s(r,e,t){if(!r)throw new Error("coordinates is required");for(var n=0;n<r.length;n++){var o=r[n];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<o[o.length-1].length;a++){if(0===n&&0===a&&!m(o[0][0])||!m(o[0][1]))throw new Error("coordinates must contain numbers");if(o[o.length-1][a]!==o[0][a])throw new Error("First and last Position are not equivalent.")}}return i({type:"Polygon",coordinates:r},e,t)}function u(r,e,t){if(!r)throw new Error("coordinates is required");if(r.length<2)throw new Error("coordinates must be an array of two or more positions");if(!m(r[0][1])||!m(r[0][1]))throw new Error("coordinates must contain numbers");return i({type:"LineString",coordinates:r},e,t)}function h(r,e){if(!p(e=e||{}))throw new Error("options is invalid");var t=e.bbox,n=e.id;if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");t&&g(t),n&&y(n);var o={type:"FeatureCollection"};return n&&(o.id=n),t&&(o.bbox=t),o.features=r,o}function c(r,e){if(null==r)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var t=o[e||"kilometers"];if(!t)throw new Error(e+" units is invalid");return r*t}function l(r,e){if(null==r)throw new Error("distance is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var t=o[e||"kilometers"];if(!t)throw new Error(e+" units is invalid");return r/t}function f(r){if(null==r)throw new Error("radians is required");return r%(2*Math.PI)*180/Math.PI}function d(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180}function m(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}function p(r){return!!r&&r.constructor===Object}function g(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach((function(r){if(!m(r))throw new Error("bbox must only contain numbers")}))}function y(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}},97363:(r,e,t)=>{"use strict";t.d(e,{c9:()=>o,r7:()=>i,wA:()=>s,oL:()=>u});var n=t(29346);function o(r){if(!r)throw new Error("obj is required");var e=i(r);if(e.length>1&&(0,n.hj)(e[0])&&(0,n.hj)(e[1]))return e;throw new Error("Coordinate is not a valid Point")}function i(r){if(!r)throw new Error("obj is required");var e;if(r.length?e=r:r.coordinates?e=r.coordinates:r.geometry&&r.geometry.coordinates&&(e=r.geometry.coordinates),e)return a(e),e;throw new Error("No valid coordinates")}function a(r){if(r.length>1&&(0,n.hj)(r[0])&&(0,n.hj)(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return a(r[0]);throw new Error("coordinates must only contain numbers")}function s(r){if(!r)throw new Error("geojson is required");if(void 0!==r.geometry)return r.geometry;if(r.coordinates||r.geometries)return r;throw new Error("geojson must be a valid Feature or Geometry Object")}function u(r,e){if(!r)throw new Error((e||"geojson")+" is required");if(r.geometry&&r.geometry.type)return r.geometry.type;if(r.type)return r.type;throw new Error((e||"geojson")+" is invalid")}},67703:(r,e,t)=>{var n=t(43648),o=t(24530),i=t(76553),a=t(8612).getCoords,s=t(62946),u=n.point,h=n.featureCollection,c=o.featureEach;function l(r,e){var t=a(r),n=a(e);if(2!==t.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var o=t[0][0],i=t[0][1],s=t[1][0],h=t[1][1],c=n[0][0],l=n[0][1],f=n[1][0],d=n[1][1],m=(d-l)*(s-o)-(f-c)*(h-i);if(0===m)return null;var p=((f-c)*(i-l)-(d-l)*(o-c))/m,g=((s-o)*(i-l)-(h-i)*(o-c))/m;return p>=0&&p<=1&&g>=0&&g<=1?u([o+p*(s-o),i+p*(h-i)]):null}r.exports=function(r,e){var t=[];if("LineString"===r.geometry.type&&"LineString"===e.geometry.type&&2===r.geometry.coordinates.length&&2===e.geometry.coordinates.length){var n=l(r,e);return n&&t.push(n),h(t)}var o=s();return o.load(i(e)),c(i(r),(function(r){c(o.search(r),(function(e){var n=l(r,e);n&&t.push(n)}))})),h(t)}},43648:r=>{function e(r,e,t,n){if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");if(t&&4!==t.length)throw new Error("bbox must be an Array of 4 numbers");if(n&&-1===["string","number"].indexOf(typeof n))throw new Error("id must be a number or a string");var o={type:"Feature"};return n&&(o.id=n),t&&(o.bbox=t),o.properties=e||{},o.geometry=r,o}function t(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(void 0===r.length)throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");if(!d(r[0])||!d(r[1]))throw new Error("Coordinates must contain numbers");return e({type:"Point",coordinates:r},t,n,o)}function n(r,t,n,o){if(!r)throw new Error("No coordinates passed");for(var i=0;i<r.length;i++){var a=r[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++){if(0===i&&0===s&&!d(a[0][0])||!d(a[0][1]))throw new Error("Coordinates must contain numbers");if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}}return e({type:"Polygon",coordinates:r},t,n,o)}function o(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(r.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!d(r[0][1])||!d(r[0][1]))throw new Error("Coordinates must contain numbers");return e({type:"LineString",coordinates:r},t,n,o)}function i(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiLineString",coordinates:r},t,n,o)}function a(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPoint",coordinates:r},t,n,o)}function s(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPolygon",coordinates:r},t,n,o)}var u={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,centimeters:6373e5,centimetres:6373e5,kilometers:6373,kilometres:6373,feet:20908792.65},h={kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,centimetres:1e4,millimeter:1e6,acres:247105e-9,miles:386e-9,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function c(r,e){if(null==r)throw new Error("radians is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r*t}function l(r,e){if(null==r)throw new Error("distance is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r/t}function f(r){if(null==r)throw new Error("radians is required");return r%(2*Math.PI)*180/Math.PI}function d(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}r.exports={feature:e,geometry:function(r,e,u){if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(u&&4!==u.length)throw new Error("bbox must be an Array of 4 numbers");var h;switch(r){case"Point":h=t(e).geometry;break;case"LineString":h=o(e).geometry;break;case"Polygon":h=n(e).geometry;break;case"MultiPoint":h=a(e).geometry;break;case"MultiLineString":h=i(e).geometry;break;case"MultiPolygon":h=s(e).geometry;break;default:throw new Error(r+" is invalid")}return u&&(h.bbox=u),h},featureCollection:function(r,e,t){if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");if(e&&4!==e.length)throw new Error("bbox must be an Array of 4 numbers");if(t&&-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string");var n={type:"FeatureCollection"};return t&&(n.id=t),e&&(n.bbox=e),n.features=r,n},geometryCollection:function(r,t,n,o){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return e({type:"GeometryCollection",geometries:r},t,n,o)},point:t,multiPoint:a,lineString:o,multiLineString:i,polygon:n,multiPolygon:s,radiansToDistance:c,distanceToRadians:l,distanceToDegrees:function(r,e){return f(l(r,e))},radians2degrees:f,degrees2radians:function(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180},bearingToAngle:function(r){if(null==r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e},convertDistance:function(r,e,t){if(null==r)throw new Error("distance is required");if(!(r>=0))throw new Error("distance must be a positive number");return c(l(r,e),t||"kilometers")},convertArea:function(r,e,t){if(null==r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var n=h[e||"meters"];if(!n)throw new Error("invalid original units");var o=h[t||"kilometers"];if(!o)throw new Error("invalid final units");return r/n*o},round:function(r,e){if(null==r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},isNumber:d}},8612:r=>{function e(r){if(!r)throw new Error("obj is required");var e;if(r.length?e=r:r.coordinates?e=r.coordinates:r.geometry&&r.geometry.coordinates&&(e=r.geometry.coordinates),e)return t(e),e;throw new Error("No valid coordinates")}function t(r){if(r.length>1&&"number"==typeof r[0]&&"number"==typeof r[1])return!0;if(Array.isArray(r[0])&&r[0].length)return t(r[0]);throw new Error("coordinates must only contain numbers")}function n(r){if(!r)throw new Error("geojson is required");if(void 0!==r.geometry)return r.geometry;if(r.coordinates||r.geometries)return r;throw new Error("geojson must be a valid Feature or Geometry Object")}r.exports={geojsonType:function(r,e,t){if(!e||!t)throw new Error("type and name required");if(!r||r.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.type)},collectionOf:function(r,e,t){if(!r)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!r||"FeatureCollection"!==r.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0;n<r.features.length;n++){var o=r.features[n];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+o.geometry.type)}},featureOf:function(r,e,t){if(!r)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!r||"Feature"!==r.type||!r.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!r.geometry||r.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.geometry.type)},getCoord:function(r){if(!r)throw new Error("obj is required");var t=e(r);if(t.length>1&&"number"==typeof t[0]&&"number"==typeof t[1])return t;throw new Error("Coordinate is not a valid Point")},getCoords:e,containsNumber:t,getGeom:n,getGeomType:function(r){if(!r)throw new Error("geojson is required");var e=n(r);if(e)return e.type}}},76553:(r,e,t)=>{var n=t(43648),o=t(8612).getCoords,i=t(24530).flattenEach,a=n.lineString,s=n.featureCollection;r.exports=function(r){if(!r)throw new Error("geojson is required");var e=[];return i(r,(function(r){!function(r,e){var t=[],n=r.geometry;switch(n.type){case"Polygon":t=o(n);break;case"LineString":t=[o(n)]}t.forEach((function(t){(function(r,e){var t=[];return r.reduce((function(r,n){var o,i,s,u,h,c,l=a([r,n],e);return l.bbox=(i=n,s=(o=r)[0],u=o[1],[s<(h=i[0])?s:h,u<(c=i[1])?u:c,s>h?s:h,u>c?u:c]),t.push(l),n})),t})(t,r.properties).forEach((function(r){r.id=e.length,e.push(r)}))}))}(r,e)})),s(e)}},24530:(r,e,t)=>{"use strict";function n(r,e,t){if(null!==r){var o,i,a,s,u,h,c,l,f,d,m=0,p=0,g=r.type,y="FeatureCollection"===g,w="Feature"===g,v=y?r.features.length:1;for(o=0;o<v;o++)for(c=(d=!!(f=y?r.features[o].geometry:w?r.geometry:r)&&"GeometryCollection"===f.type)?f.geometries.length:1,i=0;i<c;i++){var b=0;if(null!==(h=d?f.geometries[i]:f)){l=h.coordinates;var E=h.type;switch(m=!t||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":e(l,p,o,b),p++,b++;break;case"LineString":case"MultiPoint":for(a=0;a<l.length;a++)e(l[a],p,o,b),p++,"MultiPoint"===E&&b++;"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(a=0;a<l.length;a++){for(s=0;s<l[a].length-m;s++)e(l[a][s],p,o,b),p++;"MultiLineString"===E&&b++}"Polygon"===E&&b++;break;case"MultiPolygon":for(a=0;a<l.length;a++){for(s=0;s<l[a].length;s++)for(u=0;u<l[a][s].length-m;u++)e(l[a][s][u],p,o,b),p++;b++}break;case"GeometryCollection":for(a=0;a<h.geometries.length;a++)n(h.geometries[a],e,t);break;default:throw new Error("Unknown Geometry Type")}}}}}function o(r,e,t,o){var i=t;return n(r,(function(r,n,o,a){i=0===n&&void 0===t?r:e(i,r,n,o,a)}),o),i}function i(r,e){var t;switch(r.type){case"FeatureCollection":for(t=0;t<r.features.length;t++)e(r.features[t].properties,t);break;case"Feature":e(r.properties,0)}}function a(r,e,t){var n=t;return i(r,(function(r,o){n=0===o&&void 0===t?r:e(n,r,o)})),n}function s(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length;t++)e(r.features[t],t)}function u(r,e,t){var n=t;return s(r,(function(r,o){n=0===o&&void 0===t?r:e(n,r,o)})),n}function h(r){var e=[];return n(r,(function(r){e.push(r)})),e}function c(r,e){var t,n,o,i,a,s,u,h,c=0,l="FeatureCollection"===r.type,f="Feature"===r.type,d=l?r.features.length:1;for(t=0;t<d;t++){for(s=l?r.features[t].geometry:f?r.geometry:r,h=l?r.features[t].properties:f?r.properties:{},a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":e(i,c,h);break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)e(i.geometries[n],c,h);break;default:throw new Error("Unknown Geometry Type")}else e(null,c,h);c++}}function l(r,e,t){var n=t;return c(r,(function(r,o,i){n=0===o&&void 0===t?r:e(n,r,o,i)})),n}function f(r,e){c(r,(function(r,t,n){var o,i=null===r?null:r.type;switch(i){case null:case"Point":case"LineString":case"Polygon":return void e(g(r,n),t,0)}switch(i){case"MultiPoint":o="Point";break;case"MultiLineString":o="LineString";break;case"MultiPolygon":o="Polygon"}r.coordinates.forEach((function(r,i){e(g({type:o,coordinates:r},n),t,i)}))}))}function d(r,e,t){var n=t;return f(r,(function(r,o,i){n=0===o&&0===i&&void 0===t?r:e(n,r,o,i)})),n}function m(r,e){f(r,(function(r,t,n){var i=0;if(r.geometry){var a=r.geometry.type;"Point"!==a&&"MultiPoint"!==a&&o(r,(function(o,a){var s=y([o,a],r.properties);return e(s,t,n,i),i++,a}))}}))}function p(r,e,t){var n=t,o=!1;return m(r,(function(r,i,a,s){n=!1===o&&void 0===t?r:e(n,r,i,a,s),o=!0})),n}function g(r,e){if(void 0===r)throw new Error("No geometry passed");return{type:"Feature",properties:e||{},geometry:r}}function y(r,e){if(!r)throw new Error("No coordinates passed");if(r.length<2)throw new Error("Coordinates must be an array of two or more positions");return{type:"Feature",properties:e||{},geometry:{type:"LineString",coordinates:r}}}function w(r,e){if(!r)throw new Error("geojson is required");var t=r.geometry?r.geometry.type:r.type;if(!t)throw new Error("invalid geojson");if("FeatureCollection"===t)throw new Error("FeatureCollection is not supported");if("GeometryCollection"===t)throw new Error("GeometryCollection is not supported");var n=r.geometry?r.geometry.coordinates:r.coordinates;if(!n)throw new Error("geojson must contain coordinates");switch(t){case"LineString":return void e(n,0,0);case"Polygon":case"MultiLineString":for(var o=0,i=0;i<n.length;i++)"MultiLineString"===t&&(o=i),e(n[i],i,o);return;case"MultiPolygon":for(var a=0;a<n.length;a++)for(var s=0;s<n[a].length;s++)e(n[a][s],s,a);return;default:throw new Error(t+" geometry not supported")}}function v(r,e,t){var n=t;return w(r,(function(r,o,i){n=0===o&&void 0===t?r:e(n,r,o,i)})),n}t.r(e),t.d(e,{coordEach:()=>n,coordReduce:()=>o,propEach:()=>i,propReduce:()=>a,featureEach:()=>s,featureReduce:()=>u,coordAll:()=>h,geomEach:()=>c,geomReduce:()=>l,flattenEach:()=>f,flattenReduce:()=>d,segmentEach:()=>m,segmentReduce:()=>p,feature:()=>g,lineString:()=>y,lineEach:()=>w,lineReduce:()=>v})},62946:(r,e,t)=>{var n=t(46571),o=t(24530),i=o.featureEach,a=o.coordEach;function s(r){var e=[r[0],r[1]],t=[r[0],r[3]],n=[r[2],r[3]];return{type:"Feature",bbox:r,properties:{},geometry:{type:"Polygon",coordinates:[[e,[r[2],r[1]],n,t,e]]}}}function u(r){var e=[1/0,1/0,-1/0,-1/0];return a(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e}r.exports=function(r){var e=n(r);return e.insert=function(r){if(Array.isArray(r)){var e=r;(r=s(e)).bbox=e}else r.bbox=r.bbox?r.bbox:u(r);return n.prototype.insert.call(this,r)},e.load=function(r){var e=[];return Array.isArray(r)?r.forEach((function(r){var t=s(r);t.bbox=r,e.push(t)})):i(r,(function(r){r.bbox=r.bbox?r.bbox:u(r),e.push(r)})),n.prototype.load.call(this,e)},e.remove=function(r){if(Array.isArray(r)){var e=r;(r=s(e)).bbox=e}return n.prototype.remove.call(this,r)},e.clear=function(){return n.prototype.clear.call(this)},e.search=function(r){return{type:"FeatureCollection",features:n.prototype.search.call(this,this.toBBox(r))}},e.collides=function(r){return n.prototype.collides.call(this,this.toBBox(r))},e.all=function(){return{type:"FeatureCollection",features:n.prototype.all.call(this)}},e.toJSON=function(){return n.prototype.toJSON.call(this)},e.fromJSON=function(r){return n.prototype.fromJSON.call(this,r)},e.toBBox=function(r){var e;return{minX:(e=r.bbox?r.bbox:Array.isArray(r)&&4===r.length?r:u(r))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}},80277:function(r){r.exports=function(){"use strict";function r(t,n,o,i,a){for(;i>o;){if(i-o>600){var s=i-o+1,u=n-o+1,h=Math.log(s),c=.5*Math.exp(2*h/3),l=.5*Math.sqrt(h*c*(s-c)/s)*(u-s/2<0?-1:1);r(t,n,Math.max(o,Math.floor(n-u*c/s+l)),Math.min(i,Math.floor(n+(s-u)*c/s+l)),a)}var f=t[n],d=o,m=i;for(e(t,o,n),a(t[i],f)>0&&e(t,o,i);d<m;){for(e(t,d,m),d++,m--;a(t[d],f)<0;)d++;for(;a(t[m],f)>0;)m--}0===a(t[o],f)?e(t,o,m):e(t,++m,i),m<=n&&(o=m+1),n<=m&&(i=m-1)}}function e(r,e,t){var n=r[e];r[e]=r[t],r[t]=n}function t(r,e){return r<e?-1:r>e?1:0}return function(e,n,o,i,a){r(e,n,o||0,i||e.length-1,a||t)}}()},46571:(r,e,t)=>{"use strict";r.exports=o,r.exports.default=o;var n=t(80277);function o(r,e){if(!(this instanceof o))return new o(r,e);this._maxEntries=Math.max(4,r||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function i(r,e,t){if(!t)return e.indexOf(r);for(var n=0;n<e.length;n++)if(t(r,e[n]))return n;return-1}function a(r,e){s(r,0,r.children.length,e,r)}function s(r,e,t,n,o){o||(o=p(null)),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i,a=e;a<t;a++)i=r.children[a],u(o,r.leaf?n(i):i);return o}function u(r,e){return r.minX=Math.min(r.minX,e.minX),r.minY=Math.min(r.minY,e.minY),r.maxX=Math.max(r.maxX,e.maxX),r.maxY=Math.max(r.maxY,e.maxY),r}function h(r,e){return r.minX-e.minX}function c(r,e){return r.minY-e.minY}function l(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function f(r){return r.maxX-r.minX+(r.maxY-r.minY)}function d(r,e){return r.minX<=e.minX&&r.minY<=e.minY&&e.maxX<=r.maxX&&e.maxY<=r.maxY}function m(r,e){return e.minX<=r.maxX&&e.minY<=r.maxY&&e.maxX>=r.minX&&e.maxY>=r.minY}function p(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function g(r,e,t,o,i){for(var a,s=[e,t];s.length;)(t=s.pop())-(e=s.pop())<=o||(a=e+Math.ceil((t-e)/o/2)*o,n(r,a,e,t,i),s.push(e,a,a,t))}o.prototype={all:function(){return this._all(this.data,[])},search:function(r){var e=this.data,t=[],n=this.toBBox;if(!m(r,e))return t;for(var o,i,a,s,u=[];e;){for(o=0,i=e.children.length;o<i;o++)a=e.children[o],m(r,s=e.leaf?n(a):a)&&(e.leaf?t.push(a):d(r,s)?this._all(a,t):u.push(a));e=u.pop()}return t},collides:function(r){var e=this.data,t=this.toBBox;if(!m(r,e))return!1;for(var n,o,i,a,s=[];e;){for(n=0,o=e.children.length;n<o;n++)if(i=e.children[n],m(r,a=e.leaf?t(i):i)){if(e.leaf||d(r,a))return!0;s.push(i)}e=s.pop()}return!1},load:function(r){if(!r||!r.length)return this;if(r.length<this._minEntries){for(var e=0,t=r.length;e<t;e++)this.insert(r[e]);return this}var n=this._build(r.slice(),0,r.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var o=this.data;this.data=n,n=o}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(r){return r&&this._insert(r,this.data.height-1),this},clear:function(){return this.data=p([]),this},remove:function(r,e){if(!r)return this;for(var t,n,o,a,s=this.data,u=this.toBBox(r),h=[],c=[];s||h.length;){if(s||(s=h.pop(),n=h[h.length-1],t=c.pop(),a=!0),s.leaf&&-1!==(o=i(r,s.children,e)))return s.children.splice(o,1),h.push(s),this._condense(h),this;a||s.leaf||!d(s,u)?n?(t++,s=n.children[t],a=!1):s=null:(h.push(s),c.push(t),t=0,n=s,s=s.children[0])}return this},toBBox:function(r){return r},compareMinX:h,compareMinY:c,toJSON:function(){return this.data},fromJSON:function(r){return this.data=r,this},_all:function(r,e){for(var t=[];r;)r.leaf?e.push.apply(e,r.children):t.push.apply(t,r.children),r=t.pop();return e},_build:function(r,e,t,n){var o,i=t-e+1,s=this._maxEntries;if(i<=s)return a(o=p(r.slice(e,t+1)),this.toBBox),o;n||(n=Math.ceil(Math.log(i)/Math.log(s)),s=Math.ceil(i/Math.pow(s,n-1))),(o=p([])).leaf=!1,o.height=n;var u,h,c,l,f=Math.ceil(i/s),d=f*Math.ceil(Math.sqrt(s));for(g(r,e,t,d,this.compareMinX),u=e;u<=t;u+=d)for(g(r,u,c=Math.min(u+d-1,t),f,this.compareMinY),h=u;h<=c;h+=f)l=Math.min(h+f-1,c),o.children.push(this._build(r,h,l,n-1));return a(o,this.toBBox),o},_chooseSubtree:function(r,e,t,n){for(var o,i,a,s,u,h,c,f,d,m;n.push(e),!e.leaf&&n.length-1!==t;){for(c=f=1/0,o=0,i=e.children.length;o<i;o++)u=l(a=e.children[o]),d=r,m=a,(h=(Math.max(m.maxX,d.maxX)-Math.min(m.minX,d.minX))*(Math.max(m.maxY,d.maxY)-Math.min(m.minY,d.minY))-u)<f?(f=h,c=u<c?u:c,s=a):h===f&&u<c&&(c=u,s=a);e=s||e.children[0]}return e},_insert:function(r,e,t){var n=this.toBBox,o=t?r:n(r),i=[],a=this._chooseSubtree(o,this.data,e,i);for(a.children.push(r),u(a,o);e>=0&&i[e].children.length>this._maxEntries;)this._split(i,e),e--;this._adjustParentBBoxes(o,i,e)},_split:function(r,e){var t=r[e],n=t.children.length,o=this._minEntries;this._chooseSplitAxis(t,o,n);var i=this._chooseSplitIndex(t,o,n),s=p(t.children.splice(i,t.children.length-i));s.height=t.height,s.leaf=t.leaf,a(t,this.toBBox),a(s,this.toBBox),e?r[e-1].children.push(s):this._splitRoot(t,s)},_splitRoot:function(r,e){this.data=p([r,e]),this.data.height=r.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},_chooseSplitIndex:function(r,e,t){var n,o,i,a,u,h,c,f,d,m,p,g,y,w;for(h=c=1/0,n=e;n<=t-e;n++)d=o=s(r,0,n,this.toBBox),m=i=s(r,n,t,this.toBBox),void 0,void 0,void 0,void 0,p=Math.max(d.minX,m.minX),g=Math.max(d.minY,m.minY),y=Math.min(d.maxX,m.maxX),w=Math.min(d.maxY,m.maxY),a=Math.max(0,y-p)*Math.max(0,w-g),u=l(o)+l(i),a<h?(h=a,f=n,c=u<c?u:c):a===h&&u<c&&(c=u,f=n);return f},_chooseSplitAxis:function(r,e,t){var n=r.leaf?this.compareMinX:h,o=r.leaf?this.compareMinY:c;this._allDistMargin(r,e,t,n)<this._allDistMargin(r,e,t,o)&&r.children.sort(n)},_allDistMargin:function(r,e,t,n){r.children.sort(n);var o,i,a=this.toBBox,h=s(r,0,e,a),c=s(r,t-e,t,a),l=f(h)+f(c);for(o=e;o<t-e;o++)i=r.children[o],u(h,r.leaf?a(i):i),l+=f(h);for(o=t-e-1;o>=e;o--)i=r.children[o],u(c,r.leaf?a(i):i),l+=f(c);return l},_adjustParentBBoxes:function(r,e,t){for(var n=t;n>=0;n--)u(e[n],r)},_condense:function(r){for(var e,t=r.length-1;t>=0;t--)0===r[t].children.length?t>0?(e=r[t-1].children).splice(e.indexOf(r[t]),1):this.clear():a(r[t],this.toBBox)},_initFormat:function(r){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(r[0])),this.compareMinY=new Function("a","b",e.join(r[1])),this.toBBox=new Function("a","return {minX: a"+r[0]+", minY: a"+r[1]+", maxX: a"+r[2]+", maxY: a"+r[3]+"};")}}},39153:(r,e,t)=>{"use strict";t.d(e,{pZ:()=>o,By:()=>i,UU:()=>a,nG:()=>s,Vf:()=>u});var n=t(29346);function o(r,e,t){if(null!==r)for(var n,i,a,s,u,h,c,l,f=0,d=0,m=r.type,p="FeatureCollection"===m,g="Feature"===m,y=p?r.features.length:1,w=0;w<y;w++){u=(l=!!(c=p?r.features[w].geometry:g?r.geometry:r)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var v=0;v<u;v++){var b=0,E=0;if(null!==(s=l?c.geometries[v]:c)){h=s.coordinates;var x=s.type;switch(f=!t||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":e(h,d,w,b,E),d++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<h.length;n++)e(h[n],d,w,b,E),d++,"MultiPoint"===x&&b++;"LineString"===x&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<h.length;n++){for(i=0;i<h[n].length-f;i++)e(h[n][i],d,w,b,E),d++;"MultiLineString"===x&&b++,"Polygon"===x&&E++}"Polygon"===x&&b++;break;case"MultiPolygon":for(n=0;n<h.length;n++){for("MultiPolygon"===x&&(E=0),i=0;i<h[n].length;i++){for(a=0;a<h[n][i].length-f;a++)e(h[n][i][a],d,w,b,E),d++;E++}b++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)o(s.geometries[n],e,t);break;default:throw new Error("Unknown Geometry Type")}}}}}function i(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length;t++)e(r.features[t],t)}function a(r){var e=[];return o(r,(function(r){e.push(r)})),e}function s(r,e){!function(r,e){var t,n,o,i,a,s,u,h,c,l,f=0,d="FeatureCollection"===r.type,m="Feature"===r.type,p=d?r.features.length:1;for(t=0;t<p;t++){for(s=d?r.features[t].geometry:m?r.geometry:r,h=d?r.features[t].properties:m?r.properties:{},c=d?r.features[t].bbox:m?r.bbox:void 0,l=d?r.features[t].id:m?r.id:void 0,a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=u?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":e(i,f,h,c,l);break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)e(i.geometries[n],f,h,c,l);break;default:throw new Error("Unknown Geometry Type")}else e(null,f,h,c,l);f++}}(r,(function(r,t,o,i,a){var s,u=null===r?null:r.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return void e((0,n.zL)(r,o,{bbox:i,id:a}),t,0)}switch(u){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}r.coordinates.forEach((function(r,i){var a={type:s,coordinates:r};e((0,n.zL)(a,o),t,i)}))}))}function u(r,e){s(r,(function(r,t,i){var a=0;if(r.geometry){var s=r.geometry.type;"Point"!==s&&"MultiPoint"!==s&&function(r,e,t,n){var i=t;o(r,(function(r,t,n,o,a){i=0===t?r:e(i,r,0,0,0,a)}),void 0)}(r,(function(o,s,u,h,c,l){var f=(0,n.Tu)([o,s],r.properties);return e(f,t,i,l,a),a++,s}))}}))}},73345:(r,e,t)=>{var n=t(70110).getCoords,o=t(44130),i=o.lineString,a=o.multiLineString,s=o.featureCollection;function u(r,e){return r.length>1?a(r,e):i(r[0],e)}r.exports=function(r){var e,t=(e=r).geometry?e.geometry.type:e.type,o=n(r),i=r.properties;if(!o.length)throw new Error("polygon must contain coordinates");switch(t){case"Polygon":return s([u(o,i)]);case"MultiPolygon":var a=[];return o.forEach((function(r){a.push(u(r,i))})),s(a);default:throw new Error("geom "+t+" not supported")}}},44130:r=>{function e(r,e,t,n){if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");if(t&&4!==t.length)throw new Error("bbox must be an Array of 4 numbers");if(n&&-1===["string","number"].indexOf(typeof n))throw new Error("id must be a number or a string");var o={type:"Feature"};return n&&(o.id=n),t&&(o.bbox=t),o.properties=e||{},o.geometry=r,o}function t(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(void 0===r.length)throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");if(!d(r[0])||!d(r[1]))throw new Error("Coordinates must contain numbers");return e({type:"Point",coordinates:r},t,n,o)}function n(r,t,n,o){if(!r)throw new Error("No coordinates passed");for(var i=0;i<r.length;i++){var a=r[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++){if(0===i&&0===s&&!d(a[0][0])||!d(a[0][1]))throw new Error("Coordinates must contain numbers");if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}}return e({type:"Polygon",coordinates:r},t,n,o)}function o(r,t,n,o){if(!r)throw new Error("No coordinates passed");if(r.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!d(r[0][1])||!d(r[0][1]))throw new Error("Coordinates must contain numbers");return e({type:"LineString",coordinates:r},t,n,o)}function i(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiLineString",coordinates:r},t,n,o)}function a(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPoint",coordinates:r},t,n,o)}function s(r,t,n,o){if(!r)throw new Error("No coordinates passed");return e({type:"MultiPolygon",coordinates:r},t,n,o)}var u={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,centimeters:6373e5,centimetres:6373e5,kilometers:6373,kilometres:6373,feet:20908792.65},h={kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,centimetres:1e4,millimeter:1e6,acres:247105e-9,miles:386e-9,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function c(r,e){if(null==r)throw new Error("radians is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r*t}function l(r,e){if(null==r)throw new Error("distance is required");var t=u[e||"kilometers"];if(!t)throw new Error("units is invalid");return r/t}function f(r){if(null==r)throw new Error("radians is required");return r%(2*Math.PI)*180/Math.PI}function d(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}r.exports={feature:e,geometry:function(r,e,u){if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(u&&4!==u.length)throw new Error("bbox must be an Array of 4 numbers");var h;switch(r){case"Point":h=t(e).geometry;break;case"LineString":h=o(e).geometry;break;case"Polygon":h=n(e).geometry;break;case"MultiPoint":h=a(e).geometry;break;case"MultiLineString":h=i(e).geometry;break;case"MultiPolygon":h=s(e).geometry;break;default:throw new Error(r+" is invalid")}return u&&(h.bbox=u),h},featureCollection:function(r,e,t){if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");if(e&&4!==e.length)throw new Error("bbox must be an Array of 4 numbers");if(t&&-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string");var n={type:"FeatureCollection"};return t&&(n.id=t),e&&(n.bbox=e),n.features=r,n},geometryCollection:function(r,t,n,o){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return e({type:"GeometryCollection",geometries:r},t,n,o)},point:t,multiPoint:a,lineString:o,multiLineString:i,polygon:n,multiPolygon:s,radiansToDistance:c,distanceToRadians:l,distanceToDegrees:function(r,e){return f(l(r,e))},radians2degrees:f,degrees2radians:function(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180},bearingToAngle:function(r){if(null==r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e},convertDistance:function(r,e,t){if(null==r)throw new Error("distance is required");if(!(r>=0))throw new Error("distance must be a positive number");return c(l(r,e),t||"kilometers")},convertArea:function(r,e,t){if(null==r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var n=h[e||"meters"];if(!n)throw new Error("invalid original units");var o=h[t||"kilometers"];if(!o)throw new Error("invalid final units");return r/n*o},round:function(r,e){if(null==r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t},isNumber:d}},70110:r=>{function e(r){if(!r)throw new Error("obj is required");var e;if(r.length?e=r:r.coordinates?e=r.coordinates:r.geometry&&r.geometry.coordinates&&(e=r.geometry.coordinates),e)return t(e),e;throw new Error("No valid coordinates")}function t(r){if(r.length>1&&"number"==typeof r[0]&&"number"==typeof r[1])return!0;if(Array.isArray(r[0])&&r[0].length)return t(r[0]);throw new Error("coordinates must only contain numbers")}function n(r){if(!r)throw new Error("geojson is required");if(void 0!==r.geometry)return r.geometry;if(r.coordinates||r.geometries)return r;throw new Error("geojson must be a valid Feature or Geometry Object")}r.exports={geojsonType:function(r,e,t){if(!e||!t)throw new Error("type and name required");if(!r||r.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.type)},collectionOf:function(r,e,t){if(!r)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!r||"FeatureCollection"!==r.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0;n<r.features.length;n++){var o=r.features[n];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+o.geometry.type)}},featureOf:function(r,e,t){if(!r)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!r||"Feature"!==r.type||!r.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!r.geometry||r.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.geometry.type)},getCoord:function(r){if(!r)throw new Error("obj is required");var t=e(r);if(t.length>1&&"number"==typeof t[0]&&"number"==typeof t[1])return t;throw new Error("Coordinate is not a valid Point")},getCoords:e,containsNumber:t,getGeom:n,getGeomType:function(r){if(!r)throw new Error("geojson is required");var e=n(r);if(e)return e.type}}},29657:(r,e,t)=>{var n=t(10251),o=function(r){this.precision=r&&r.precision?r.precision:17,this.direction=!(!r||!r.direction)&&r.direction,this.pseudoNode=!(!r||!r.pseudoNode)&&r.pseudoNode,this.objectComparator=r&&r.objectComparator?r.objectComparator:s};function i(r){return r.coordinates.map((function(e){return{type:r.type.replace("Multi",""),coordinates:e}}))}function a(r,e){return r.hasOwnProperty("coordinates")?r.coordinates.length===e.coordinates.length:r.length===e.length}function s(r,e){return n(r,e,{strict:!0})}o.prototype.compare=function(r,e){if(r.type!==e.type||!a(r,e))return!1;switch(r.type){case"Point":return this.compareCoord(r.coordinates,e.coordinates);case"LineString":return this.compareLine(r.coordinates,e.coordinates,0,!1);case"Polygon":return this.comparePolygon(r,e);case"Feature":return this.compareFeature(r,e);default:if(0===r.type.indexOf("Multi")){var t=this,n=i(r),o=i(e);return n.every((function(r){return this.some((function(e){return t.compare(r,e)}))}),o)}}return!1},o.prototype.compareCoord=function(r,e){if(r.length!==e.length)return!1;for(var t=0;t<r.length;t++)if(r[t].toFixed(this.precision)!==e[t].toFixed(this.precision))return!1;return!0},o.prototype.compareLine=function(r,e,t,n){if(!a(r,e))return!1;var o=this.pseudoNode?r:this.removePseudo(r),i=this.pseudoNode?e:this.removePseudo(e);if(!n||this.compareCoord(o[0],i[0])||(i=this.fixStartIndex(i,o))){var s=this.compareCoord(o[t],i[t]);return this.direction||s?this.comparePath(o,i):!!this.compareCoord(o[t],i[i.length-(1+t)])&&this.comparePath(o.slice().reverse(),i)}},o.prototype.fixStartIndex=function(r,e){for(var t,n=-1,o=0;o<r.length;o++)if(this.compareCoord(r[o],e[0])){n=o;break}return n>=0&&(t=[].concat(r.slice(n,r.length),r.slice(1,n+1))),t},o.prototype.comparePath=function(r,e){var t=this;return r.every((function(r,e){return t.compareCoord(r,this[e])}),e)},o.prototype.comparePolygon=function(r,e){if(this.compareLine(r.coordinates[0],e.coordinates[0],1,!0)){var t=r.coordinates.slice(1,r.coordinates.length),n=e.coordinates.slice(1,e.coordinates.length),o=this;return t.every((function(r){return this.some((function(e){return o.compareLine(r,e,1,!0)}))}),n)}return!1},o.prototype.compareFeature=function(r,e){return!(r.id!==e.id||!this.objectComparator(r.properties,e.properties)||!this.compareBBox(r,e))&&this.compare(r.geometry,e.geometry)},o.prototype.compareBBox=function(r,e){return!!(!r.bbox&&!e.bbox||r.bbox&&e.bbox&&this.compareCoord(r.bbox,e.bbox))},o.prototype.removePseudo=function(r){return r},r.exports=o},68103:(r,e)=>{Number.prototype.toRad=function(){return this*Math.PI/180},e.Kl=function(r,e){var t,n=6378137,o=6356752.314245,i=1/298.257223563,a=r.latitude,s=r.longitude,u=e.latitude,h=(e.longitude-s).toRad(),c=Math.atan((1-i)*Math.tan(a.toRad())),l=Math.atan((1-i)*Math.tan(u.toRad())),f=Math.sin(c),d=Math.cos(c),m=Math.sin(l),p=Math.cos(l),g=h,y=100;do{var w=Math.sin(g),v=Math.cos(g),b=Math.sqrt(p*w*(p*w)+(d*m-f*p*v)*(d*m-f*p*v));if(0==b)return 0;var E=f*m+d*p*v,x=Math.atan2(b,E),M=d*p*w/b,P=1-M*M,A=E-2*f*m/P;isNaN(A)&&(A=0);var S=i/16*P*(4+i*(4-3*P));t=g,g=h+(1-S)*i*M*(x+S*b*(A+S*E*(2*A*A-1)))}while(Math.abs(g-t)>1e-12&&--y>0);if(0==y)return NaN;var F=P*(n*n-o*o)/(o*o),B=F/1024*(256+F*(F*(74-47*F)-128)),C=o*(1+F/16384*(4096+F*(F*(320-175*F)-768)))*(x-B*b*(A+B/4*(E*(2*A*A-1)-B/6*A*(4*b*b-3)*(4*A*A-3))));return C.toFixed(3)},e.e8=function(r,e){var t=r.latitude,n=r.longitude,o=e.latitude,i=e.longitude,a=(o-t).toRad(),s=(i-n).toRad(),u=Math.sin(a/2)*Math.sin(a/2)+Math.cos(t.toRad())*Math.cos(o.toRad())*Math.sin(s/2)*Math.sin(s/2);return(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u))*6371*1e3).toFixed(3)}},23384:r=>{var e=Array.isArray||function(r){return"[object Array]"===Object.prototype.toString.call(r)};r.exports=function(r,t){if(!e(r))throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");return{type:"Feature",geometry:{type:"Point",coordinates:r},properties:t||{}}}}}]);